// Test points for the Sinusoidal projection
//
// (C) 2019, Open Source Geospatial Foundation (OSGeo)
//
// The following test points were calculated with libproj4 utility "cs2cs"
// cs2cs +init=epsg:4326 +to +proj=igh +lat_0=0 +lon_0=0 +datum=WGS84 +units=m +no_defs wgs.txt
//
// Lu√≠s Moreira de Sousa - September 2019
//
// --------------------------------------------------------------------------
// How to run this script:
//
// 1. Move to the referencing subfolder
// $ cd ./modules/library/referencing
//
// 2. Obtain the Java class path with Maven
// $ mvn dependency:build-classpath -nsu
//
// 3. Execute the tests (replacing _CLASS_PATH_ with the output generated by Maven)
// $ java -cp target/classes:target/test-classes:_CLASS_PATH_ -ea org.geotools.referencing.ScriptRunner src/test/resources/org/geotools/referencing/test-data/scripts/Homolosine.txt
//
// A test is performed every time a "target pt" statement occurs. If the target point computed
// by Geotools is different from the target point declared in this script by an amount greater
// than the value specified in the last "test tolerance" statement, then a failure is reported.
// Inverse transforms are tested if java assertions are enabled.
// If some test fails, "print" statements can be added in this script for debugging purpose:
//
//    print crs            (prints the source and target CRS, and the transform between them)
//    print pts            (prints the source and target points, and their transformed points)


// CRS used for the test 
set _WGS84_  = GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563 ] ], PRIMEM["Greenwich",0.0], UNIT["degree",0.01745329251994328 ]]

////////////////////////////////////////////
// Homolosine

set _homolosine_ = PROJCS["Homolosine",_WGS84_,PROJECTION["Homolosine"],UNIT["m",1.0] ]


source crs = _WGS84_
target crs = _homolosine_

test tolerance = (0.01, 0.01)

source pt = (0, 0)
target pt = (0, 0)

source pt = (-10, 0)
target pt = (-1113194.9, 0)

// Result is correct but test fails
//source pt = (-170, 50)
//target pt = (-16808943.1045, 5536683.82457)

// Result is correct but test fails
//source pt = (-170, 40)
//target pt = (-17368775.4047, 4429529.03035)

// Result is correct but test fails
//source pt = (-173.5, 58.7)
//target pt = (-16016676.35,	6414902.69)
         
// Result is correct but test fails
//source pt = (-57.1, 39.6)
//target pt = (-7447266.73, 4385116.71)


// Result is correct but test fails
//source pt = (-10.25, 22.4)
//target pt = (-804960.01, 2478093.67)

// Result is correct but test fails
//source pt = (38.6, 45.3)
//target pt = (4031915.70,	5035970.98)

// Result is correct but test fails
//source pt = (-178.2, -88.7)
//target pt = (-17965404.86,	-8650934.82)

// Result is correct but test fails
//source pt = (-121.44, -31.1)
//target pt = (-14132322.74,	-3442061.36)
  
// Result is correct but test fails             
//source pt = (-99.6, -46)
//target pt = (-9842168.42,	-5111588.15)

// Result is correct but test fails 
//source pt = (-25.4, -17.4)
//target pt = (-3002664.88,	-1924575.74)

// Result is correct but test fails 
//source pt = (-14.7, -5.98)
//target pt = (-1615516.05, -661258.23)

// Result is correct but test fails 
//source pt = (78.2, -87.95)
//target pt = (2894399.21, -8623913.04)

// Result is correct but test fails
//source pt = (97.56, -81.7)
//target pt = (14356972.86, -8299320.82)

// Result is correct but test fails
//source pt = (168.22, -39.7)
//target pt = (18005055.98, -4396219.51)
             

// -----------
//source crs = _homolosine_
//target crs = _WGS84_

//test tolerance = (0.0001, 0.0001)

//source pt = (0, 0)
//target pt = (0, 0)



  









